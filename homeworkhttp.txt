1.httpとは
  httpとはwebサーバーとwebクライアントがhtmlで書かれた情報をやりとりする際に使われる通信手順（プロトコル）のことである。
  複数回のやりとりの追跡はできないが、cookieと組み合わせることで前回のやりとりの状態を保持できる。
  暗号化するか、httpsの通信手順を使うことで情報を第三者に見られずにやりとりできる。
2.httpメッセージとは
  webサーバーとwebクライアントがデータを交換する手段。
3.httpメッセージの2種類
  ・リクエスト-クライアントが送信してサーバーにアクションを起こさせる。
  ・レスポンス-サーバーの回答。
4.httpの構成
  i.   実行するリクエスト、または成否を表す開始行。１行で表す。
  ii.  リクエストの詳細を示す。またはメッセージ本文を説明するhttpヘッダー。
  iii. リクエストのメタ情報が全て送信されたことを示す空白行。
  iv.  リクエストに関連付けられたデータ (htmlフォームの内容など)、あるいはレスポンスに関連付けられたドキュメントを含む、省略可能な本文。本文が存在することやそのサイズは、開始行やhttpヘッダーで指定する。
5.httpリクエスト
  i.   開始行-hhtpメソッド、リクエスト対象（URL）、httpバージョンで構成。
6.httpレスポンス
  i.   ステータス行-プロトコルバージョン、ステータスコード、ステータス文字列で構成。
7.メッセージボディ（本文）が空になる可能性。
  ある。
  リソースを取り込むリクエストである、"GET","HEAD","DELETE","OPTIONS"は、本文を持たないのが普通。
  201(Created)や204(No content)といったステータスコードのレスポンスは、本文を持たないのが普通。
8.httpメソッド全種とその説明。
  ・GET-指定したリソースの表現をリクエスト。リクエストはデータの取り込みに限る。
  ・HEAD-GETリクエストと同じレスポンスを求めるが、レスポンス本文はない。
  ・POST-指定したリソースに実体を送信するメソッド。サーバー上の状態を変更することがままある。
  ・PUT-対象リソースの現在の表現全体を、リクエストのペイロード（ヘッダー等を除いたデータ本体）で置き換える。
  ・DELETE-指定したリソースを削除する。
  ・CONNECT-対象リソースで識別されるサーバーとの間にトンネルを確立する。
  ・OPTIONS-対象リソースの通信オプションを示すために使用。
  ・TRACE-対象リソースへのパスに沿ってメッセージのループバックテストを実行する。
  ・PATCH-リソースを部分的に変更するために使用する。
9.GETとPOSTの違い
  GET-サーバーからの情報の取得に使用する。URLに直接パラメータ（クエリストリング）を付加してリクエストする。テキストデータのみ送信できる。パラメータがURLに付加されるためブックマークできる。
  POST-サーバーへ情報を登録するときに使用する。クエリストリングはBODYに含む。バイナリデータの送信ができる。URLに付加するパラメータを見られたくない場合に使用する。パラメータがBODYに記述されるためブックマークできない。
10.ステータスコードとは何か。よくあるステータスコードは？
  httpにおいてwebサーバからのレスポンスの意味を表現する三桁の数字からなるコード。
  100番台-情報レスポンス
  200番台-成功レスポンス
  300番台-リダイレクトレスポンス
  400番台-クライアントエラーレスポンス
  500番台-サーバーエラーレスポンス
  e.g. 200-リクエスト成功、403-クライアントのコンテンツへのアクセスがサーバーから拒否されている、404-サーバーがリクエストされたリソースを発見できない。
11.メッセージヘッダー（httpヘッダー）にはどんなものがあるか。
  一般ヘッダー-リクエストとレスポンスの両方に適用されるが、最終的に本文で転送されるデータとは関係がない。
  リクエストヘッダー-読み込むリソースやクライアント自身に関する詳細な情報をもつヘッダー。
  レスポンスヘッダー-レスポンスに関する追加情報（場所など）やサーバ自身に関する追加情報（名前やバージョン）をもつヘッダー。
  エンティティヘッダー-コンテンツの長さやMIMEタイプなど、エンティティの本体に関する詳細情報をもつヘッダー。